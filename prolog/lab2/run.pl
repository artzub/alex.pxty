%определяем языки
l(en).
l(fr).
l(de).
l(it).

ne(L, L1, L2, L3) :-
	not(L = L2),
	not(L = L3),
	not(L1 = L2),
	not(L1 = L3).

% проверяем условие что никто из делегатов не говорит по-немецки и
% французки одновременно.
ndll(_, fr, de).
ndll(_, de, fr).

%физик не говорит на английском.
ndll(p, en, _).
ndll(p, _, en).

%у физика и биолога есть язык на котором они могут разговаривать,
%иначе это не удовлетворяет условим
ndll(p, L, L1) :-
	dll(b, L2, L3),
	ne(L, L1, L2, L3).
%аналогично для случая физика и математика.
ndll(p, L, L1) :-
	dll(m, L2, L3),
	ne(L, L1, L2, L3).
%определяем что вариант когда биолог не говорит на немецком не верны.
ndll(b, L, L1) :-
	L \== de, L1 \== de.
%химик не говори по-немецки.
ndll(c, de, _).
ndll(c, _, de).
%химик и биолог имеют общий язык
ndll(c, L, L1) :-
	dll(b, L2, L3), ne(L, L1, L2, L3).
%у математика и биолога нет общего языка елси есть иной вариант он не верный.
ndll(m, L, _) :- dl(b, L).
ndll(m, _, L) :- dl(b, L).

%если все условия верные добавляем в бд данные о делегаете и его языках.
adll(D, L, L1) :- not(ndll(D, L, L1)), assert(dll(D, L, L1)).
adll(D, _, _) :- retract(dll(D, _, _)), fail.

%один из языко на котором говорит делегат.
dl(D, L):- dll(D, L, _); dll(D, _, L).

%общий язык для троих делегатов.
dddl(D, D1, D2):- dl(D, L), dl(D1, L), D \== D1, dl(D2, L), D2 \== D1.

%инициализируем делегата определяем его языки.
init(D) :- l(L), l(L1), L \== L1, adll(D, L, L1).

run:-
    init(b) %перым инициализируем биолога так как даныне о нем используются для определения других
  , init(c) %и так дальше в зависимости от порядка использования информации о делегатах.
  , init(m)
  , init(p)
  , dddl(_, _, _)  %проверяем что сущестует язык на котором могут общаться трое.
  , not(dddl(c, m, p)) %проверяем утверждение что у химика , математика и физика нет общего языка
  , nl, nl
  , dll(D, L, L1)  
  , write(D), write('=['), write(L), write(','), write(L1), write(']'), nl
  , fail
  .
